import { Button, CardMedia, InputAdornment, InputLabel, TextField, Typography } from '@mui/material';import Box from '@mui/material/Box';import cybellumSign from 'assets/images/login/cybellum-sign.svg';import monitor from 'assets/images/login/imac_dig_twins.png';import { SubmitHandler, useForm } from 'react-hook-form';import ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';import { useDispatch, useSelector } from 'react-redux';import { Navigate } from 'react-router-dom';import { useLoginMutation } from '../../api/auth/auth';import { AuthRequestType } from '../../api/auth/auth.interface';import { setUser } from '../../slices/user/userSlice';type Inputs = {  email: string;  password: string;};export default function Login() {  const bottomLinks = {    'Privacy policy': '/privacy-policy',    'Terms of use': '/terms-of-use',    'Contact us': '/contact-us',  };  // @ts-ignore  const user = useSelector((state) => state.user);  const dispatch = useDispatch();  console.log('user', user);  const {    register,    handleSubmit,    formState: { errors },  } = useForm<Inputs>();  const [login] = useLoginMutation();  const onSubmit: SubmitHandler<Inputs> = (data: Inputs) => {    login(data as AuthRequestType)      .then((res) => {        // @ts-ignore        dispatch(setUser({ user: res?.data?.user, accessToken: res?.data?.accessToken }));      })      .catch((error) => {        console.log('Error', error.data);        alert(error.data);      });  };  return (    <Box sx={{ p: 5, display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between', width: '100%' }}>      {user.accessToken && <Navigate to="/intro" replace={true} />}      <Box sx={{ flex: '45%', p: 10, display: 'flex', flexDirection: 'column', justifyContent: 'center' }}>        <CardMedia component="img" alt="Cybellum" image={cybellumSign} sx={{ width: 200 }} />        <Typography variant="h1" sx={{ mt: 4, mb: 6, fontSize: '3rem', width: '100%' }}>          Welcome To The          <br />          Product Security Platform        </Typography>        <form onSubmit={handleSubmit(onSubmit)}>          <Box sx={{ maxWidth: '400px', alignItems: 'space-between' }}>            <InputLabel sx={{ pl: 2, color: (theme) => (errors?.email ? theme.palette.error.main : theme.palette.primary.main) }}>Username</InputLabel>            <TextField              error={!!errors.email}              InputProps={{                endAdornment: (                  <>                    {errors.email && (                      <InputAdornment position="end" sx={{ color: (theme) => theme.palette.error.main }}>                        <ErrorOutlineIcon />                      </InputAdornment>                    )}                  </>                ),              }}              placeholder={'alma.lawson@example.com'}              type={'email'}              {...register('email', { required: true })}            />            <Typography sx={{ color: (theme) => theme.palette.error.main, fontSize: '0.75rem', pt: 1 }}>{errors.email && 'This field is required'}</Typography>            <InputLabel sx={{ pl: 2, color: (theme) => (errors?.password ? theme.palette.error.main : theme.palette.primary.main) }}>Password</InputLabel>            <TextField              error={!!errors.password}              InputProps={{                endAdornment: (                  <>                    {errors.password && (                      <InputAdornment position="end" sx={{ color: (theme) => theme.palette.error.main }}>                        <ErrorOutlineIcon />                      </InputAdornment>                    )}                  </>                ),              }}              type="password"              {...register('password', { required: true })}            />            <Typography sx={{ color: (theme) => theme.palette.error.main, fontSize: '0.75rem', pt: 1 }}>              {errors.password && 'This field is required'}            </Typography>            <Button sx={{ p: 0 }}>Forgot your password?</Button>            <Button              type={'submit'}              fullWidth              sx={{                mt: 4,                mb: 4,                backgroundColor: (theme) => theme.palette.secondary.main,                color: '#2A2118',                '&:hover': {                  backgroundColor: (theme) => theme.palette.secondary.main,                  boxShadow: '0px 1px 3px 1px rgba(28, 27, 31, 0.15), 0px 1px 2px 0px rgba(28, 27, 31, 0.30)',                },              }}            >              Log in            </Button>          </Box>        </form>      </Box>      <Box sx={{ flex: '55%' }}>        <CardMedia component="img" alt="Digital Twins" image={monitor} sx={{ maxHeight: '100vh', maxWidth: 'fit-screen' }} />      </Box>      <Box sx={{ display: 'flex', justifyContent: 'space-between', width: '100%', pl: 9 }}>        <Box sx={{ maxWidth: '400px', width: '100%', display: 'flex', justifyContent: 'space-between' }}>          {Object.keys(bottomLinks).map((link) => (            <Button key={link}>{link}</Button>          ))}        </Box>      </Box>    </Box>  );}